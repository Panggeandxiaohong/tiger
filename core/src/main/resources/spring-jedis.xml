<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-4.2.xsd">
    <!-- jedis 配置 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig" >
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="maxWaitMillis" value="${redis.maxWait}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean >
    <!--配置OSS-->
<!--<bean id="ossutil" class="online.pangge.exam.util.OSSUtil" init-method="init" destroy-method="destroy" lazy-init="false">
    <property name="accessKeyId" value="${oss.accessKeyId}"/>
    <property name="accessKeySecret" value="${oss.accessKeySecret}"/>
    <property name="bucketName" value="${oss.bucketName}"/>
    <property name="timeout" value="${oss.timeout}"/>
    <property name="ossEndpoint" value="${oss.ossEndpoint}"/>
</bean>-->
<bean id="ossutil" class="online.pangge.exam.util.OSSUtil" init-method="init" destroy-method="destroy" lazy-init="false">
    <property name="accessKeyId" value="${aliyunoss.accessKeyId}"/>
    <property name="accessKeySecret" value="${aliyunoss.accessKeySecret}"/>
    <property name="bucketName" value="${aliyunoss.bucketName}"/>
    <property name="timeout" value="${aliyunoss.timeout}"/>
    <property name="ossEndpoint" value="${aliyunoss.ossEndpoint}"/>
</bean>
    <!-- redis服务器中心 -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >
        <property name="poolConfig" ref="poolConfig" />
        <property name="port" value="${redis.port}" />
        <property name="hostName" value="${redis.host}" />
        <property name="password" value="${redis.password}" />
        <property name="timeout" value="${redis.timeout}" />
    </bean >
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <property name="keySerializer" >
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer" >
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
    </bean >

    <!-- cache配置
    <bean id="methodCacheInterceptor" class="online.pangge.exam.util.MethodCacheInterceptor" >
        <property name="redisUtil" ref="redisUtil" />
    </bean >
     clean配置
    <bean id="cleanCacheInterceptor" class="online.pangge.exam.util.CleanCacheInterceptor" >
        <property name="redisUtil" ref="redisUtil" />
    </bean >-->
    <bean id="redisUtil" class="online.pangge.exam.util.RedisUtil" >
        <property name="redisTemplate" ref="redisTemplate" />
    </bean >
    <!--     <bean id="theTracingBeforeAdvisor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
              <property name="mappedNames">
                  <list>
                      <value>select*</value>
                      <value>insert*</value>
                      <value>delete*</value>
                      <value>update*</value>
                  </list>
              </property>
              <property name="advice">
                  <ref bean="methodCacheInterceptor             </property>
          </bean>
       <bean id="theTracingBeforeAdvisor2"  class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
              <property name="mappedNames">
                  <list>

                  </list>
              </property>
              <property name="advice">
                  <ref bean="cleanCacheInterceptor"/>
              </property>
          </bean>-->
</beans>
