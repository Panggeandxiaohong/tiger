<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="online.pangge.exam.mapper.StudentMapper" >
  <resultMap id="BaseResultMap" type="online.pangge.exam.domain.Student" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="classes" property="classes" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="wechatname" property="wechatname" jdbcType="VARCHAR" />
    <result column="stunum" property="stunum" jdbcType="BIGINT" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="admin" property="adminType"/>
    <result column="create_date" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_update_date" property="lastUpdateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from student
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="online.pangge.exam.domain.Student" keyColumn="id" useGeneratedKeys="true" keyProperty="id" >
    insert into student (name, classes, password, 
      wechatname, stunum, sex
      )
    values (#{name,jdbcType=VARCHAR}, #{classes,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{wechatname,jdbcType=VARCHAR}, #{stunum,jdbcType=BIGINT}, #{sex,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="online.pangge.exam.domain.Student" >
    update student
    set name = #{name,jdbcType=VARCHAR},
      classes = #{classes,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      wechatname = #{wechatname,jdbcType=VARCHAR},
      stunum = #{stunum,jdbcType=BIGINT},
      sex = #{sex,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, name, classes, password, wechatname, stunum, sex,create_date,last_update_date,admin
    from student
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByStunum" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select id, name, classes, password, wechatname, stunum, sex,create_date,last_update_date,admin
    from student
    where stunum = #{stunum}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, name, classes, password, wechatname, stunum, sex
    from student
  </select>
</mapper>